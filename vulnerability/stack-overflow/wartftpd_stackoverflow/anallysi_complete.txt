
afetr bp wsock32!recv
ChildEBP RetAddr
00a5fc28 00421a2b image00400000+0x23122
00a5fc58 5f40576b image00400000+0x21a2b
00a5fc74 5f4056e8 MFC42!Ordinal2491+0x61
00a5fd00 5f401b1c MFC42!Ordinal5046+0x12
00a5fd24 5f401a96 MFC42!Ordinal6374+0x26
00a5fd90 5f401a20 MFC42!Ordinal1109+0x72
00a5fdac 5f4019ca MFC42!Ordinal1578+0x2c
00a5fdd8 77d48709 MFC42!Ordinal1579+0x3d
00a5fe04 77d487eb USER32!InternalCallWinProc+0x28
00a5fe6c 77d489a5 USER32!UserCallWinProcCheckWow+0x150
00a5fecc 77d4bccc USER32!DispatchMessageWorker+0x306
00a5fedc 5f40116f USER32!DispatchMessageA+0xf----------
00000000 00000000 MFC42!Ordinal5307+0x3a


take a VM snapshot
==============================snapshot 1

after creash
ChildEBP RetAddr
00a5fd44 55207274 0xdeadbeef
00a5fda0 0043262c 0x55207274--this addr too
00a5fde0 77d48709 image00400000+0x3262c--chk this addr
00a5fe0c 77d49655 USER32!InternalCallWinProc+0x28
00a5fe74 77d4958f USER32!UserCallWinProc+0xf3
00a5fecc 77d4bccc USER32!DispatchMessageWorker+0x10e
00a5fedc 5f40116f USER32!DispatchMessageA+0xf---------stack same till here
00000000 00000000 MFC42!Ordinal5307+0x3a


0:001> dd esp
00a5fd48  55207274 20726573 6d6f7266 37323120
00a5fd58  302e302e 6c20312e 6567676f 756f2064


0:001> r
eax=00000001 ebx=00000000 ecx=00000001 edx=00000000 esi=7c8092ac edi=00a5fe48
eip=deadbeef esp=00a5fd48 ebp=00a5fda0 iopl=0         nv up ei pl nz ac po nc
cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00010212
deadbeef ??              ???


0:001> dd 00a5fd38
00a5fd38  41414141 41414141 deadbeef 6e632020
00a5fd48  55207274 20726573 6d6f7266 37323120
00a5fd58  302e302e 6c20312e 6567676f 756f2064

00a5fd40 is esp -8
0:001> dd 00a5fd40
00a5fd40  deadbeef 6e632020 55207274 20726573----------> memory location 00a5fd40 is overwritten on stack

==========revert to snapshot1


00a5fd40 check what overwrites this

bw w4 00a5fd40 ".printf \"bp hit eip = [%08x]\",eip;u eip l1;.echo;gc;"


ba w4 00a5fd40 ".printf \"bp hit eip = [%08x]\",eip;u eip l1;dd 00a5fd40 l1;.echo;gc;"


0:001> ba w4 00a5fd40 ".printf \"bp hit eip = [%08x]\",eip;u eip l1;dd 00a5fd40 l1;.echo;gc;"
0:001> g
bp hit eip = [77c22742]MSVCRT!_EH_prolog+0xa:
77c22742 8b44240c        mov     eax,dword ptr [esp+0Ch]
00a5fd40  00a5fdd0

bp hit eip = [77c22742]MSVCRT!_EH_prolog+0xa:
77c22742 8b44240c        mov     eax,dword ptr [esp+0Ch]
00a5fd40  00a5fdd0

bp hit eip = [77c22742]MSVCRT!_EH_prolog+0xa:
77c22742 8b44240c        mov     eax,dword ptr [esp+0Ch]
00a5fd40  00a5fdd0

bp hit eip = [77c22742]MSVCRT!_EH_prolog+0xa:
77c22742 8b44240c        mov     eax,dword ptr [esp+0Ch]
00a5fd40  00a5fdd0

bp hit eip = [77c22742]MSVCRT!_EH_prolog+0xa:
77c22742 8b44240c        mov     eax,dword ptr [esp+0Ch]
00a5fd40  00a5fdd0

bp hit eip = [77c22742]MSVCRT!_EH_prolog+0xa:
77c22742 8b44240c        mov     eax,dword ptr [esp+0Ch]
00a5fd40  00a5fdd0

bp hit eip = [77c22742]MSVCRT!_EH_prolog+0xa:
77c22742 8b44240c        mov     eax,dword ptr [esp+0Ch]
00a5fd40  00a5fdd0

bp hit eip = [77c22742]MSVCRT!_EH_prolog+0xa:
77c22742 8b44240c        mov     eax,dword ptr [esp+0Ch]
00a5fd40  00a5fdd0

bp hit eip = [77c22742]MSVCRT!_EH_prolog+0xa:
77c22742 8b44240c        mov     eax,dword ptr [esp+0Ch]
00a5fd40  00a5fdd0

bp hit eip = [77c22742]MSVCRT!_EH_prolog+0xa:
77c22742 8b44240c        mov     eax,dword ptr [esp+0Ch]
00a5fd40  00a5fdd0

bp hit eip = [5f401a37]MFC42!Ordinal1109+0x13:
5f401a37 56              push    esi
00a5fd40  00000000

bp hit eip = [5f401a37]MFC42!Ordinal1109+0x13:
5f401a37 56              push    esi
00a5fd40  00000000

bp hit eip = [5f401a37]MFC42!Ordinal1109+0x13:
5f401a37 56              push    esi
00a5fd40  00000000

bp hit eip = [5f401a37]MFC42!Ordinal1109+0x13:
5f401a37 56              push    esi
00a5fd40  00000000

bp hit eip = [7c8024cb]kernel32!_SEH_prolog:
7c8024cb 68f399837c      push    offset kernel32!_except_handler3 (7c8399f3)
00a5fd40  7c80ca79

bp hit eip = [7c8024fc]kernel32!_SEH_prolog+0x31:
7c8024fc 8d45f0          lea     eax,[ebp-10h]
00a5fd40  7c80cb28

bp hit eip = [7c90eb8b]ntdll!KiFastSystemCall:
7c90eb8b 8bd4            mov     edx,esp
00a5fd40  77d484bc

bp hit eip = [77d4b928]USER32!_FindProp+0x3:
77d4b928 8bec            mov     ebp,esp
00a5fd40  00a5fd54

bp hit eip = [77d4bfc0]USER32!CallWindowProcAorW+0x3:
77d4bfc0 8bec            mov     ebp,esp
00a5fd40  00a5fd60

bp hit eip = [5f401a37]MFC42!Ordinal1109+0x13:
5f401a37 56              push    esi
00a5fd40  00000000

bp hit eip = [5f401a37]MFC42!Ordinal1109+0x13:
5f401a37 56              push    esi
00a5fd40  00000000

bp hit eip = [5ad7397b]uxtheme!_InitThemeMsg+0x4c:
5ad7397b 5e              pop     esi
00a5fd40  00000000

bp hit eip = [77d486f6]USER32!InternalCallWinProc+0x15:
77d486f6 ff750c          push    dword ptr [ebp+0Ch]
00a5fd40  00000046

bp hit eip = [5ad7397b]uxtheme!_InitThemeMsg+0x4c:
5ad7397b 5e              pop     esi
00a5fd40  00000000

bp hit eip = [77d486f6]USER32!InternalCallWinProc+0x15:
77d486f6 ff750c          push    dword ptr [ebp+0Ch]
00a5fd40  00000046

bp hit eip = [77d48625]USER32!PtiCurrent:
77d48625 64a118000000    mov     eax,dword ptr fs:[00000018h]
00a5fd40  77d4b6b1

bp hit eip = [77d4860c]USER32!IsInsideUserApiHook:
77d4860c 33c0            xor     eax,eax
00a5fd40  77d4b713

bp hit eip = [77d4b72a]USER32!SendMessageWorker+0x48c:
77d4b72a 53              push    ebx
00a5fd40  00000001

bp hit eip = [5f401108]MFC42!Ordinal1169:
5f401108 e876ffffff      call    MFC42!Ordinal1168 (5f401083)
00a5fd40  5f401123

bp hit eip = [0042e1ee]image00400000+0x2e1ee:
0042e1ee 687c944400      push    offset image00400000+0x4947c (0044947c)
00a5fd40  00448b74

bp hit eip = [0042e257]image00400000+0x2e257:
0042e257 e8041e0000      call    image00400000+0x30060 (00430060)
00a5fd40  00a5fd74

bp hit eip = [0042e26b]image00400000+0x2e26b:
0042e26b ff15e4cf4400    call    dword ptr [image00400000+0x4cfe4 (0044cfe4)]
00a5fd40  0089cb24

bp hit eip = [5f403702]MFC42!Ordinal800+0x1:
5f403702 8b01            mov     eax,dword ptr [ecx]
00a5fd40  7c8092ac

bp hit eip = [0043425e]image00400000+0x3425e:
0043425e ff258cce4400    jmp     dword ptr [image00400000+0x4ce8c (0044ce8c)]
00a5fd40  0042e2ad

bp hit eip = [0042e2b3]image00400000+0x2e2b3:
0042e2b3 ff15b8cf4400    call    dword ptr [image00400000+0x4cfb8 (0044cfb8)]--------this call possibly pushes the overwritten return address--check the function u  bp 0042e2b3 and see
00a5fd40  0089fcfc

bp hit eip = [0042e2dc]image00400000+0x2e2dc:
0042e2dc 8b45d8          mov     eax,dword ptr [ebp-28h]
00a5fd40  004494cc------------------------------------------->possible function whose mem location was overwritten check any of these precceded by call instruction

bp hit eip = [004044c0]image00400000+0x44c0:
004044c0 81ec08020000    sub     esp,208h
00a5fd40  0042e2ff---------------------------------------------->this is preceed deded by call instrution and which means this might be pushed onto stack by the call

bp hit eip = [77c42334]MSVCRT!wscanf+0x6e:
77c42334 ff01            inc     dword ptr [ecx]
00a5fd40  0042e2ef

bp hit eip = [77c42334]MSVCRT!wscanf+0x6e:
77c42334 ff01            inc     dword ptr [ecx]
00a5fd40  0042beef

bp hit eip = [77c42334]MSVCRT!wscanf+0x6e:
77c42334 ff01            inc     dword ptr [ecx]
00a5fd40  00adbeef

bp hit eip = [77c42334]MSVCRT!wscanf+0x6e:
77c42334 ff01            inc     dword ptr [ecx]
00a5fd40  deadbeef

(e64.cb8): Access violation - code c0000005 (first chance)
First chance exceptions are reported before any exception handling.
This exception may be expected and handled.
eax=00000001 ebx=00000000 ecx=00000001 edx=00000000 esi=7c8092ac edi=00a5fe48
eip=deadbeef esp=00a5fd48 ebp=00a5fda0 iopl=0         nv up ei pl nz ac po nc
cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00010212
deadbeef ??              ???



ba w4 00a5fd40 ".printf \"bp hit eip = [%08x]\",eip;u eip l1;dd 00a5fd40 l1;.echo;k 2;.echo;gc;"

in olydbg set bp 0042e2b3
then fter hitting memory on acces on 00a5fd40


0042E2FA  |.  E8 C161FDFF   |CALL war-ftpd.004044C0                  ; \war-ftpd.004044C0-------possible vuln function
0042E2FF  |.  8B45 E4       |MOV EAX,DWORD PTR SS:[EBP-1C]
0042E302  |.  8B80 C8000000 |MOV EAX,DWORD PTR DS:[EAX+C8]
0042E308  |.  85C0          |TEST EAX,EAX
0042E30A  |.  74 15         |JE SHORT war-ftpd.0042E321
0042E30C  |.  8B4D E8       |MOV ECX,DWORD PTR SS:[EBP-18]
0042E30F  |.  8B50 20       |MOV EDX,DWORD PTR DS:[EAX+20]
0042E312  |.  51            |PUSH ECX                                ; /lParam
0042E313  |.  6A 00         |PUSH 0                                  ; |wParam = 0
0042E315  |.  68 80010000   |PUSH 180                                ; |Message = LB_ADDSTRING
0042E31A  |.  52            |PUSH EDX                                ; |hWnd
0042E31B  |.  FF15 68D04400 |CALL NEAR DWORD PTR DS:[<&USER32.PostMe>; \PostMessageA


go inside call step into in ollydbg
u see  esp would be 00a5fd40 is svaed with return address taht is  0042E2FF  which gets overwritten inside the call

after breaking do alt+k
Call tree
Called from                       Procedure                         Calls                             Comment
war-ftpd.0042E6F5                 war-ftpd.0042E1B0                 war-ftpd.004044C0
war-ftpd.00432627                                                   war-ftpd.0042E000
                                                                     > war-ftpd.0042E189              ???
                                                                     > war-ftpd.0042E19B              ???
                                                                    war-ftpd.0042E361                 ???
                                                                    war-ftpd.0042E396                 ???
                                                                     > war-ftpd.0042E3A0
                                                                    war-ftpd.00430060
                                                                     > war-ftpd.004300F1              ???
                                                                     > war-ftpd.00430100
                                                                     > war-ftpd.004301BA              ???
                                                                    war-ftpd.00431060
                                                                    MFC42.#1175                       ???
                                                                    MFC42.#2915                       ???
                                                                     > MFC42.#540                     ???
                                                                    MFC42.#2614                       ???
                                                                     > MFC42.#2818                    ???
                                                                     > MFC42.#537                     ???
                                                                     > MFC42.#535                     ???
                                                                     > MFC42.#939                     ???
                                                                     > MFC42.#940                     ???
                                                                     > MFC42.#3811                    ???
                                                                     > MFC42.#2820                    ???
                                                                     > MFC42.#5802                    ???
                                                                     > WINMM.PlaySoundA               Sys
                                                                    MSVCRT.fopen                      Sys
                                                                     > MSVCRT.sprintf                 Sys
                                                                    MSVCRT.fclose                     Sys
                                                                    MSVCRT.fprintf                    Sys
                                                                    MSVCRT.strtok                     Sys
                                                                    USER32.PostMessageA               Sys
                                                                     > kernel32.GetLocalTime          Sys
                                                                     > kernel32.CreateDirectoryA      Sys
                                                                     > ntdll.RtlEnterCriticalSection  Sys
                                                                    Unknown destination(s)


=====
after wsock recv

00422B32   .  FF56 1C       CALL NEAR DWORD PTR DS:[ESI+1C]          ;  recv
00422B35   .  83F8 FF       CMP EAX,-1


edi points to the the user buffer


======MODIFY AURORA POC TO BE OVERWRITTEN BY DEADBEEF
